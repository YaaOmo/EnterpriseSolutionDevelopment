<?php
defined('_JEXEC') or die;
function src_6ff295c53a7c84ba08df2229cdcbb1ef($src_variables){
$app = $mainframe = JFactory::getApplication();
$document = $doc = JFactory::getDocument();
$database = $db = JFactory::getDbo();
$user = JFactory::getUser();
$Itemid = $app->input->getInt('Itemid');
if (is_array($src_variables)) {foreach ($src_variables as $src_key => $src_value) {${$src_key} = $src_value;}}
function gradient(startColor, endColor, steps) { 
             var start = { 
                     'Hex' : startColor, 
                     'R' : parseInt(startColor.slice(1,3), 16), 
                     'G' : parseInt(startColor.slice(3,5), 16), 
                     'B' : parseInt(startColor.slice(5,7), 16) 
             } 
             var end = { 
                     'Hex' : endColor, 
                     'R' : parseInt(endColor.slice(1,3), 16), 
                     'G' : parseInt(endColor.slice(3,5), 16), 
                     'B' : parseInt(endColor.slice(5,7), 16) 
             } 
             diffR = end['R'] - start['R']; 
             diffG = end['G'] - start['G']; 
             diffB = end['B'] - start['B']; 
 
             stepsHex = new Array(); 
             stepsR = new Array(); 
             stepsG = new Array(); 
             stepsB = new Array(); 
 
             for(var i = 0; i <= steps; i++) { 
                     stepsR[i] = start['R'] + ((diffR / steps) * i); 
                     stepsG[i] = start['G'] + ((diffG / steps) * i); 
                     stepsB[i] = start['B'] + ((diffB / steps) * i); 
                     stepsHex[i] = '#' + Math.round(stepsR[i]).toString(16) + '' + Math.round(stepsG[i]).toString(16) + '' + Math.round(stepsB[i]).toString(16); 
             } 
             return stepsHex; 
 
         } 
    function regularPolygon($img,$x,$y,$radius,$sides,$color) 
    { 
        $points = array(); 
         $colors = array(); 
         $colors = gradient(0x000000, 0xffffff, 5); 
        for($a = -90;$a < 270; $a += 360/$sides) 
        { 
            $points[] = $x + $radius * cos(deg2rad($a)); 
            $points[] = $y + $radius * sin(deg2rad($a)); 
        } 
         for($z = 0; $z < count($points); $z+=4) { 
             $triangle_points = [ 
                0 => $points[$z], 
                1 => $points[$z + 1], 
                2 => $points[$z + 2], 
                3 => $points[$z + 3], 
                4 => $x, 
                5 => $y 
            ] 
             imagefilledpolygon($img, $triangle_points, 3, $z/4); 
        } 
        header('Content-type: image/png'); 
        imagepng($img, 'fuenfeck.png'); 
        imagedestroy($img); 
    } 
     
     
    $counter = 0; 
    $db = new mysqli("localhost", "root", "", "benefits"); 
    if(!$db) 
    { 
        exit("Verbindungsfehler: ".mysqli_connect_error()); 
    } 
    $abfrage = "SELECT name FROM business_areas"; 
    $business_areas = $db->query($abfrage); 
    while ($row = $business_areas->fetch_assoc()) { 
        printf($row["name"]. "<br>"); 
        $counter++; 
    }; 
    $image = imagecreatetruecolor(1500, 1500); 
    regularPolygon($image, 1500/2, 1500/2, 500, 5, 0xf03a7c); 
    echo '<img src="fuenfeck.png" />';
;return get_defined_vars();
;}